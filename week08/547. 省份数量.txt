class Solution {
public:
    int findCircleNum(vector<vector<int>>& isConnected) {
        int cityNum = isConnected.size();
        int ans = 0;
        vector<bool> visit(cityNum, false);
        for (int i = 0; i < cityNum; i++) {
            if (!visit[i]) {
                Dfs(isConnected, visit, cityNum, i);
                ans++;
            }
        }

        return ans;
    }

    void Dfs(vector<vector<int>>& isConnected, vector<bool>& visit, int cityNum, int i)
    {
        for (int j = 0; j < cityNum; j++) {
            if (isConnected[i][j] == 1 && !visit[j]) {
                visit[j] = true;
                Dfs(isConnected, visit, cityNum, j);
            }
        }
    }
};